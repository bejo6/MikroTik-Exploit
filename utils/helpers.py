import re
import logging


def setup_logger(name=None, level='info'):
    if not name:
        name = 'WinBox'

    log_format = '%(asctime)s [%(name)s] %(levelname)s %(message)s'
    date_format = '%H:%M:%S'
    logging.basicConfig(
        format=log_format,
        datefmt=date_format,
    )
    log = logging.getLogger(name=name)

    if re.match(r'debug', level, re.I):
        log.setLevel(logging.DEBUG)
    elif re.match(r'warn(ing)?', level, re.I):
        log.setLevel(logging.WARNING)
    elif re.match(r'crit(ical)?', level, re.I):
        log.setLevel(logging.CRITICAL)
    elif re.match(r'error', level, re.I):
        log.setLevel(logging.ERROR)
    else:
        log.setLevel(logging.INFO)

    return log


def generate_ip(start_ip, count=254, ports=None, mix=False):
    if ports is None:
        ports = []

    start = list(map(int, start_ip.split('.')))
    temp = start

    ip_range = [start_ip]
    next_ip = start_ip

    c = 1
    while c <= count:
        start[3] += 1
        for i in (3, 2, 1):
            if temp[i] == 256:
                temp[i] = 0
                temp[i - 1] += 1

        if temp[-1] in [0, 255]:
            continue

        ip_addr = '.'.join(map(str, temp))
        if c < count:
            ip_range.append(ip_addr)
        else:
            next_ip = ip_addr

        c += 1

    results = []

    for ip in ip_range:
        if ports:
            if mix:
                results.append(ip)
            for port in ports:
                results.append('%s:%s' % (ip, str(port)))
        else:
            results.append(ip)

    return results, next_ip
